1.什么是Devops
1》首先问大家一个软件开发经历什么流程？
答：制定计划、需求分析、软件设计、程序编写、软件测试和运行维护

2》制定计划、需求分析、软件设计、程序编写、软件测试和运行维护
就是瀑布流开发方式

缺点：1.要求前提需求分析十分准确，但是往往陷入分析瘫痪
          2.某环节卡流程，影响整个开发进度，交付周期长
          3.测试、质量把控滞后

3》敏捷开发
	敏捷开发以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发。在敏捷开发中，软件项目在构建初期被切分成多个子项目，各个子项目的成果都经过测试，具备可视、可集成和可运行使用的特征。
优点：1.更快交付价值
          2.更低的风险
          3.持续改进
          4.适应需求变化
缺点：
         1.迭代版本多，发布新版本测试人员需要整体测试
         2.出包次数或部署次数增加多，增加额外的工作量

4》然而高效的软件开发最高效的组织形式
软件开发最高效的组织形式是“One Man Work”，只有一个人干活，写个小项目，从需求到开发，从测试到部署全部独立完成，非常高效。但是随着业务的增长，项目开始变得庞大，变成团队，出现了分工，出现了产品经理，项目经理，开发，数据，测试，运维等角色。这些角色之间存在天然的矛盾。对于运维来说，稳定压倒一切。而对于研发来说，却希望能开发更多的功能。

所以需要引入Devops
1.DevOps 是一种思想或方法论，它涵盖开发、测试、运维的整个过程
2.DevOps 强调软件开发人员与软件测试、软件运维、质量保障 (QA) 部门之间有效的沟通与协作
3.强调通过自动化的方法管理软件变更，软件集成，软件部署上线（CI/CD/CD)
4.使软件从 构建 到 测试、发布、更加快捷、可靠，最终按时交付软件。

DevOps 的流程结构
开发Dev：
plan ：开发设计，上线需求
code：开发人员编码实现需求
build：开发人员构建软件环境

管理Ops：
test：测试上线
release：发布到服务端
deploy：部署软件程序
operate：监控
monitor：运维

一个需求/软件，从诞生开始到上线维护的闭环流程。这个流程也就是 DevOps 实现一体化的方向。

Dvops
图

什么是 CI / CD /CD
CI：持续集成 （代码写好存盘提交后，后续的构建能够自动化执行，再被测试工具部署到测试环境中进行测试，将所有步骤自动完成。一但出现问题打回重新处理）

CD：持续交付，Delivery（交付给运维进行部署，测试完成后打包到可以被运维拿到的共享文件服务，仓库当中。让运维工程师能从中得到打包好的构建好的产品）

CD：持续部署，Deployment （交付完成后进行部署，自动将包拖出来，触发任务自动发布到线上）

DevOps工具
DevOps 兴起于2009年，近年来由于云计算，互联网的发展。促进了 DevOps的基础设施以及工具链的发展，涌现了一大批优秀的工具，这些工具涵盖各个领域。帮助 DevOps 实现落地。

例如：Github/Gitlab、Git/svn、Docker、Jenkins、HudSon、Maven/Nexus 、Ansible(puppet)、ELk 等
开发人员只需要修改代码，并将其上传到仓库。剩下的事全部由 DevOps 持续集成自动完成。

开发 ― devops ― 测试 ― 上线 ---- 监控 ---- 运维 。这一套自动化实现，不需要你手动操作，就叫 DevOps落地。
实现这些你必须的会很多可以实现 DevOps 的应用软件。

案例例子


总结
传统模式 ?? 敏捷模式 ?? DevOps 模式

? 开发团队需要与运维团队进行了大规模的"交接"。运维团队负责执行一系列“部署”活动，将软件代码转移到生产环境。并负责后续的系统稳定运行。生产环境的基础设施与开发或者测试不同。需要额外的检查和平衡，以确保它的一切功能正常。

DevOps 这种软件开发方法，涉及到软件整个开发生命周期，这些活动只能在 DevOps中实现，而不是传统与敏捷。

DevOps 是在较短的开发周期内开发高质量软件的首选方法，同时可以提高客户满意度。


